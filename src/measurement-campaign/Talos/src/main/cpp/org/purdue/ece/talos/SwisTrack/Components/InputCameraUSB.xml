<?xml version="1.0"?>
<swistrackcomponent>
	<friendlyname>Input from USB Camera</friendlyname>
	<description>Grabs an image from a USB camera (OpenCV).</description>
	<url>http://en.wikibooks.org/wiki/SwisTrack/Components/InputCameraUSB</url>
	<displayimage>Output</displayimage>

	<configuration>
		<parameter type="integer">
			<name>CameraNumber</name>
			<label>Camera number</label>
			<unit></unit>
			<min>-1</min>
			<max>50</max>
			<default>0</default>
			<reloadable>false</reloadable>
		</parameter>
		<label>Camera 0 is the first camera, 1 is the second camera, and so on. Setting this value to -1 means "any camera".</label>

		<parameter type="checkbox">
			<name>FlipVertically</name>
			<label>Flip the image vertically</label>
			<default>0</default>
			<reloadable>true</reloadable>
		</parameter>
		<parameter type="integer">
			<name>Brightness</name>
			<label>Brightness</label>
			<min>-128</min>
			<default>0</default>
			<max>127</max>
			<slider>true</slider>
			<sliderstep>1</sliderstep>
			<reloadable>true</reloadable>
		</parameter>
		<parameter type="integer">
			<name>Contrast</name>
			<label>Contrast</label>
			<min>64</min>
			<default>100</default>
			<max>255</max>
			<slider>true</slider>
			<sliderstep>1</sliderstep>
			<reloadable>true</reloadable>
		</parameter>
		<parameter type="integer">
			<name>Gain</name>
			<label>Gain</label>
			<min>0</min>
			<default>0</default>
			<max>2</max>
			<slider>true</slider>
			<sliderstep>1</sliderstep>
			<reloadable>true</reloadable>
		</parameter>
		<parameter type="checkbox">
			<name>autoExposure</name>
			<label>Auto exposure</label>
			<default>1</default>
			<reloadable>true</reloadable>
		</parameter>
		<parameter type="integer">
			<name>Exposure</name>
			<label>Exposure</label>
			<min>-14</min>
			<default>0</default>
			<max>0</max>
			<slider>true</slider>
			<sliderstep>1</sliderstep>
			<reloadable>true</reloadable>
		</parameter>
	</configuration>
</swistrackcomponent>
